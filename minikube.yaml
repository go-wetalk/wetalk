# minikube 内构建开发环境
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgcm
  namespace: wetalk
  labels:
    app: postgres
data:
  POSTGRES_DB: appsrv
  POSTGRES_USER: appsrv
  POSTGRES_PASSWORD: appsrvappsrv
  PGDATA: "/var/lib/postgresql/data/pgdata"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg
  namespace: wetalk
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: postgres:12.1
        name: postgres
        envFrom:
        - configMapRef:
            name: pgcm
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data/pgdata"
            name: "pgsql-data"
      securityContext:
        fsGroup: 70
      volumes:
      - name: "pgsql-data"
        hostPath:
          path: /data/wetalk-pgsql
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: pgsvc
  namespace: wetalk
spec:
  type: NodePort
  ports:
  - port: 5432
    nodePort: 30010
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: wetalk
  labels:
    k8s-app: redis
spec:
  selector:
    matchLabels:
      k8s-app: redis
  template:
    metadata:
      labels:
        k8s-app: redis
    spec:
      containers:
      - image: redis:5.0-alpine
        name: redis
        ports:
        - containerPort: 6379
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: wetalk
spec:
  type: NodePort
  ports:
  - port: 6379
    nodePort: 30011
  selector:
    k8s-app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oss
  namespace: wetalk
spec:
  selector:
    matchLabels:
      app: oss
  template:
    metadata:
      labels:
        app: oss
    spec:
      containers:
      - image: minio/minio:RELEASE.2020-04-02T21-34-49Z
        name: oss
        args:
        - server
        - /data
        ports:
        - containerPort: 9000
          name: oss-http
        env:
        - name: MINIO_ACCESS_KEY
          value: "testtest"
        - name: MINIO_SECRET_KEY
          value: "testtesttesttest"
        volumeMounts:
        - mountPath: "/data"
          name: "oss-data"
      securityContext:
        fsGroup: 1000
      volumes:
      - name: "oss-data"
        hostPath:
          path: /data/wetalk-minio
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: oss
  namespace: wetalk
spec:
  type: NodePort
  ports:
  - port: 9000
    nodePort: 30012
  selector:
    app: oss
